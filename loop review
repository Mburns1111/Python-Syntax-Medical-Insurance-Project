Review
11 min
Good job! In this lesson, you learned

How to write a for loop.
How to use range in a loop.
How to write a while loop.
What infinite 
loops
Preview: Docs Loading link description
 are and how to avoid them.
How to control loops using 
break
Preview: Docs Loading link description
 and 
continue
Preview: Docs Loading link description
.
How to write elegant loops as 
list comprehensions
Preview: Docs Loading link description
.
Letâ€™s get some more practice with these concepts!

Instructions
Checkpoint 1 Passed
1.
Create a list called single_digits that consists of the numbers 0-9 (inclusive).

Checkpoint 2 Passed
2.
Create a for loop that goes through single_digits and prints out each one.

Checkpoint 3 Passed
3.
Before the loop, create a list called squares. Assign it to be an empty list to begin with.

Checkpoint 4 Passed
4.
Inside the loop that iterates through single_digits, append the squared value of each element of single_digits to the list squares. You can do this before or after printing the element.

You can square a number by either using:

number_to_square**2

Copy to Clipboard

(which takes it to the second power), or using:

number_to_square*number_to_square

Copy to Clipboard

which multiplies it by itself.

To append an element to a list, you can use the .append() method:

my_list.append(number_to_add)

Copy to Clipboard

Checkpoint 5 Passed
5.
After the for loop, print out squares.

Checkpoint 6 Passed
6.
Create the list cubes using a list comprehension on the single_digits list. Each element of cubes should be an element of single_digits taken to the third power.

Checkpoint 7 Passed
7.
Print cubes.

Good job!


# Your code below:
single_digits = [0,1,2,3,4,5,6,7,8,9]
squares = []
for num in single_digits:
  print(num)
  squares.append(num**2)
  print(squares)

cubes= [num**3 for num in single_digits]
print(cubes)
